Archive member included to satisfy reference by file (symbol)

app/libapp.a(main.c.obj)      (--whole-archive)
zephyr/libzephyr.a(heap.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(clock.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(printk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(sem.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(thread_entry.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cbprintf_complete.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cbprintf.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(assert.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(dec.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(hex.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rb.c.obj)  (--whole-archive)
zephyr/libzephyr.a(timeutil.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bitarray.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(ring_buffer.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(configs.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(tracing_none.c.obj)
                              (--whole-archive)
zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
                              (--whole-archive)
zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
                              (--whole-archive)
zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
                              (--whole-archive)
zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
                              (--whole-archive)
zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
                              (--whole-archive)
zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
                              (--whole-archive)
zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
                              (--whole-archive)
zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
                              (--whole-archive)
zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
                              (--whole-archive)
zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
                              (--whole-archive)
zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
                              (--whole-archive)
zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
                              (--whole-archive)
zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
                              (--whole-archive)
zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
                              (--whole-archive)
zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
                              (--whole-archive)
zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
                              (--whole-archive)
zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
                              (--whole-archive)
zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
                              (--whole-archive)
zephyr/kernel/libkernel.a(fatal.c.obj)
                              zephyr/libzephyr.a(assert.c.obj) (z_fatal_error)
zephyr/kernel/libkernel.a(init.c.obj)
                              zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj) (_kernel)
zephyr/kernel/libkernel.a(idle.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (idle)
zephyr/kernel/libkernel.a(sem.c.obj)
                              zephyr/libzephyr.a(sem.c.obj) (z_impl_k_sem_init)
zephyr/kernel/libkernel.a(thread.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (z_setup_new_thread)
zephyr/kernel/libkernel.a(sched.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (z_thread_timeout)
zephyr/kernel/libkernel.a(timeslicing.c.obj)
                              zephyr/kernel/libkernel.a(sched.c.obj) (z_reset_time_slice)
zephyr/kernel/libkernel.a(timeout.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (z_add_timeout)
zephyr/kernel/libkernel.a(banner.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (boot_banner)
zephyr/kernel/libkernel.a(device.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (z_device_state_init)

Discarded input sections

 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .debug_line    0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .debug_str     0x0000000000000000      0x1ec zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .comment       0x0000000000000000       0x2c zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
 .text          0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .data          0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .bss           0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .text.chunk_size
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap.c.obj)
 .text.set_chunk_used
                0x0000000000000000       0x20 zephyr/libzephyr.a(heap.c.obj)
 .text.free_list_add
                0x0000000000000000       0x7f zephyr/libzephyr.a(heap.c.obj)
 .text.free_list_remove_bidx
                0x0000000000000000       0x46 zephyr/libzephyr.a(heap.c.obj)
 .text.free_list_remove
                0x0000000000000000       0x23 zephyr/libzephyr.a(heap.c.obj)
 .text.alloc_chunk
                0x0000000000000000       0x87 zephyr/libzephyr.a(heap.c.obj)
 .text.merge_chunks
                0x0000000000000000       0x3c zephyr/libzephyr.a(heap.c.obj)
 .text.split_chunks
                0x0000000000000000       0x47 zephyr/libzephyr.a(heap.c.obj)
 .text.free_chunk
                0x0000000000000000       0x72 zephyr/libzephyr.a(heap.c.obj)
 .text.inplace_realloc.isra.0
                0x0000000000000000      0x109 zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_free
                0x0000000000000000       0x35 zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_usable_size
                0x0000000000000000       0x2a zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_alloc
                0x0000000000000000       0x7b zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_noalign_alloc
                0x0000000000000000        0xf zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_aligned_alloc
                0x0000000000000000      0x127 zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_realloc
                0x0000000000000000       0x9b zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_aligned_realloc
                0x0000000000000000       0xb1 zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_init
                0x0000000000000000       0xb4 zephyr/libzephyr.a(heap.c.obj)
 .debug_info    0x0000000000000000     0x302a zephyr/libzephyr.a(heap.c.obj)
 .debug_abbrev  0x0000000000000000      0x466 zephyr/libzephyr.a(heap.c.obj)
 .debug_loc     0x0000000000000000     0x3295 zephyr/libzephyr.a(heap.c.obj)
 .debug_aranges
                0x0000000000000000       0xa8 zephyr/libzephyr.a(heap.c.obj)
 .debug_ranges  0x0000000000000000      0x590 zephyr/libzephyr.a(heap.c.obj)
 .debug_line    0x0000000000000000     0x1201 zephyr/libzephyr.a(heap.c.obj)
 .debug_str     0x0000000000000000      0x72c zephyr/libzephyr.a(heap.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/libzephyr.a(heap.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .debug_frame   0x0000000000000000      0x31c zephyr/libzephyr.a(heap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbvprintf_package
                0x0000000000000000      0x445 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .rodata.cbvprintf_package
                0x0000000000000000       0xbc zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbprintf_package
                0x0000000000000000       0x20 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbpprintf_external
                0x0000000000000000       0x91 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.is_ptr   0x0000000000000000       0x4c zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbprintf_package_convert
                0x0000000000000000      0x3d4 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_info    0x0000000000000000     0x1211 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_abbrev  0x0000000000000000      0x47a zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_loc     0x0000000000000000     0x1a21 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_aranges
                0x0000000000000000       0x40 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_ranges  0x0000000000000000      0x1d0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_line    0x0000000000000000      0xeb9 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_str     0x0000000000000000      0x774 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_frame   0x0000000000000000       0xf4 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(clock.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(clock.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(clock.c.obj)
 .text.timespec_normalize
                0x0000000000000000       0x5a zephyr/libzephyr.a(clock.c.obj)
 .text.timespec_add
                0x0000000000000000        0xf zephyr/libzephyr.a(clock.c.obj)
 .text.z_impl_sys_clock_getrtoffset
                0x0000000000000000       0x24 zephyr/libzephyr.a(clock.c.obj)
 .text.sys_clock_gettime
                0x0000000000000000       0xb7 zephyr/libzephyr.a(clock.c.obj)
 .text.z_impl_sys_clock_settime
                0x0000000000000000       0xa7 zephyr/libzephyr.a(clock.c.obj)
 .text.z_impl_sys_clock_nanosleep
                0x0000000000000000      0x205 zephyr/libzephyr.a(clock.c.obj)
 .bss.rt_clock_offset
                0x0000000000000000        0x8 zephyr/libzephyr.a(clock.c.obj)
 .debug_info    0x0000000000000000      0xc7b zephyr/libzephyr.a(clock.c.obj)
 .debug_abbrev  0x0000000000000000      0x3ef zephyr/libzephyr.a(clock.c.obj)
 .debug_loc     0x0000000000000000      0x5c0 zephyr/libzephyr.a(clock.c.obj)
 .debug_aranges
                0x0000000000000000       0x48 zephyr/libzephyr.a(clock.c.obj)
 .debug_ranges  0x0000000000000000       0xc0 zephyr/libzephyr.a(clock.c.obj)
 .debug_line    0x0000000000000000      0x830 zephyr/libzephyr.a(clock.c.obj)
 .debug_str     0x0000000000000000      0x7c5 zephyr/libzephyr.a(clock.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/libzephyr.a(clock.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(clock.c.obj)
 .debug_frame   0x0000000000000000       0xe4 zephyr/libzephyr.a(clock.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .text.str_out  0x0000000000000000       0x39 zephyr/libzephyr.a(printk.c.obj)
 .text.__printk_get_hook
                0x0000000000000000        0x6 zephyr/libzephyr.a(printk.c.obj)
 .text.z_impl_k_str_out
                0x0000000000000000       0x2b zephyr/libzephyr.a(printk.c.obj)
 .text.vsnprintk
                0x0000000000000000       0x60 zephyr/libzephyr.a(printk.c.obj)
 .text.snprintk
                0x0000000000000000       0x1d zephyr/libzephyr.a(printk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_init
                0x0000000000000000       0x1b zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_give
                0x0000000000000000       0x15 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_take
                0x0000000000000000       0x31 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_count_get
                0x0000000000000000        0xb zephyr/libzephyr.a(sem.c.obj)
 .debug_info    0x0000000000000000      0x4a5 zephyr/libzephyr.a(sem.c.obj)
 .debug_abbrev  0x0000000000000000      0x22c zephyr/libzephyr.a(sem.c.obj)
 .debug_loc     0x0000000000000000      0x114 zephyr/libzephyr.a(sem.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(sem.c.obj)
 .debug_ranges  0x0000000000000000       0x70 zephyr/libzephyr.a(sem.c.obj)
 .debug_line    0x0000000000000000      0x307 zephyr/libzephyr.a(sem.c.obj)
 .debug_str     0x0000000000000000      0x3f4 zephyr/libzephyr.a(sem.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/libzephyr.a(sem.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .debug_frame   0x0000000000000000       0x94 zephyr/libzephyr.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf.c.obj)
 .text.cbprintf
                0x0000000000000000       0x1f zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_info    0x0000000000000000      0x226 zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_abbrev  0x0000000000000000      0x15f zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_loc     0x0000000000000000       0xe7 zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_line    0x0000000000000000      0x158 zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_str     0x0000000000000000      0x305 zephyr/libzephyr.a(cbprintf.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/libzephyr.a(cbprintf.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_frame   0x0000000000000000       0x34 zephyr/libzephyr.a(cbprintf.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .rodata.assert_post_action.str1.1
                0x0000000000000000       0x2c zephyr/libzephyr.a(assert.c.obj)
 .text.assert_post_action
                0x0000000000000000       0x2e zephyr/libzephyr.a(assert.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .text.u8_to_dec
                0x0000000000000000       0x70 zephyr/libzephyr.a(dec.c.obj)
 .debug_info    0x0000000000000000      0x12e zephyr/libzephyr.a(dec.c.obj)
 .debug_abbrev  0x0000000000000000       0x9a zephyr/libzephyr.a(dec.c.obj)
 .debug_loc     0x0000000000000000      0x1c2 zephyr/libzephyr.a(dec.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(dec.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/libzephyr.a(dec.c.obj)
 .debug_line    0x0000000000000000      0x116 zephyr/libzephyr.a(dec.c.obj)
 .debug_str     0x0000000000000000      0x2cb zephyr/libzephyr.a(dec.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/libzephyr.a(dec.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(dec.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .text.char2hex
                0x0000000000000000       0x3c zephyr/libzephyr.a(hex.c.obj)
 .text.hex2char
                0x0000000000000000       0x26 zephyr/libzephyr.a(hex.c.obj)
 .text.bin2hex  0x0000000000000000       0x71 zephyr/libzephyr.a(hex.c.obj)
 .text.hex2bin  0x0000000000000000       0xc8 zephyr/libzephyr.a(hex.c.obj)
 .debug_info    0x0000000000000000      0x296 zephyr/libzephyr.a(hex.c.obj)
 .debug_abbrev  0x0000000000000000       0xf1 zephyr/libzephyr.a(hex.c.obj)
 .debug_loc     0x0000000000000000      0x1c1 zephyr/libzephyr.a(hex.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(hex.c.obj)
 .debug_ranges  0x0000000000000000       0x28 zephyr/libzephyr.a(hex.c.obj)
 .debug_line    0x0000000000000000      0x298 zephyr/libzephyr.a(hex.c.obj)
 .debug_str     0x0000000000000000      0x2e3 zephyr/libzephyr.a(hex.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/libzephyr.a(hex.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .debug_frame   0x0000000000000000       0xb0 zephyr/libzephyr.a(hex.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .text.set_child
                0x0000000000000000       0x12 zephyr/libzephyr.a(rb.c.obj)
 .text.find_and_stack
                0x0000000000000000       0x56 zephyr/libzephyr.a(rb.c.obj)
 .text.rotate   0x0000000000000000       0xb0 zephyr/libzephyr.a(rb.c.obj)
 .text.stack_left_limb
                0x0000000000000000       0x49 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_get_minmax
                0x0000000000000000       0x27 zephyr/libzephyr.a(rb.c.obj)
 .text.rb_insert
                0x0000000000000000      0x197 zephyr/libzephyr.a(rb.c.obj)
 .text.rb_remove
                0x0000000000000000      0x3c5 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_walk
                0x0000000000000000       0x3a zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_child
                0x0000000000000000       0x18 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_is_black
                0x0000000000000000        0xd zephyr/libzephyr.a(rb.c.obj)
 .text.rb_contains
                0x0000000000000000       0x40 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_foreach_next
                0x0000000000000000       0x72 zephyr/libzephyr.a(rb.c.obj)
 .debug_info    0x0000000000000000     0x234d zephyr/libzephyr.a(rb.c.obj)
 .debug_abbrev  0x0000000000000000      0x4d1 zephyr/libzephyr.a(rb.c.obj)
 .debug_loc     0x0000000000000000     0x22e1 zephyr/libzephyr.a(rb.c.obj)
 .debug_aranges
                0x0000000000000000       0x78 zephyr/libzephyr.a(rb.c.obj)
 .debug_ranges  0x0000000000000000      0x598 zephyr/libzephyr.a(rb.c.obj)
 .debug_line    0x0000000000000000     0x128f zephyr/libzephyr.a(rb.c.obj)
 .debug_str     0x0000000000000000      0x4c7 zephyr/libzephyr.a(rb.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/libzephyr.a(rb.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .debug_frame   0x0000000000000000      0x1e8 zephyr/libzephyr.a(rb.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm64
                0x0000000000000000      0x13f zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm
                0x0000000000000000       0x47 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_update
                0x0000000000000000       0x89 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_set_skew
                0x0000000000000000       0x42 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_estimate_skew
                0x0000000000000000       0xf3 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_ref_from_local
                0x0000000000000000      0x101 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_local_from_ref
                0x0000000000000000       0xed zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_skew_to_ppb
                0x0000000000000000       0x60 zephyr/libzephyr.a(timeutil.c.obj)
 .rodata.cst4   0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .rodata.cst8   0x0000000000000000       0x18 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_info    0x0000000000000000      0x769 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_abbrev  0x0000000000000000      0x1d9 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_loc     0x0000000000000000      0x562 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_aranges
                0x0000000000000000       0x58 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_ranges  0x0000000000000000       0xa0 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_line    0x0000000000000000      0x5d3 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_str     0x0000000000000000      0x502 zephyr/libzephyr.a(timeutil.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/libzephyr.a(timeutil.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_frame   0x0000000000000000      0x170 zephyr/libzephyr.a(timeutil.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .text.setup_bundle_data.constprop.0
                0x0000000000000000       0x5b zephyr/libzephyr.a(bitarray.c.obj)
 .text.set_region
                0x0000000000000000       0xcf zephyr/libzephyr.a(bitarray.c.obj)
 .text.set_clear_region
                0x0000000000000000       0x7b zephyr/libzephyr.a(bitarray.c.obj)
 .text.match_region
                0x0000000000000000       0xc4 zephyr/libzephyr.a(bitarray.c.obj)
 .text.is_region_set_clear
                0x0000000000000000       0x90 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_popcount_region
                0x0000000000000000      0x10d zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_xor
                0x0000000000000000       0xd5 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_bit
                0x0000000000000000       0x49 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_bit
                0x0000000000000000       0x49 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_bit
                0x0000000000000000       0x60 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_set_bit
                0x0000000000000000       0x61 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_clear_bit
                0x0000000000000000       0x61 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_alloc
                0x0000000000000000       0xf7 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_find_nth_set
                0x0000000000000000      0x137 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_free
                0x0000000000000000       0xb4 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_set
                0x0000000000000000       0x19 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_cleared
                0x0000000000000000       0x19 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_set_region
                0x0000000000000000       0xc7 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_region
                0x0000000000000000       0x19 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_region
                0x0000000000000000       0x19 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_info    0x0000000000000000     0x1b80 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_abbrev  0x0000000000000000      0x45d zephyr/libzephyr.a(bitarray.c.obj)
 .debug_loc     0x0000000000000000     0x1582 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_aranges
                0x0000000000000000       0xb8 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_ranges  0x0000000000000000      0x2f0 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_line    0x0000000000000000     0x12be zephyr/libzephyr.a(bitarray.c.obj)
 .debug_str     0x0000000000000000      0x690 zephyr/libzephyr.a(bitarray.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/libzephyr.a(bitarray.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_frame   0x0000000000000000      0x354 zephyr/libzephyr.a(bitarray.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(ring_buffer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(ring_buffer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_area_claim
                0x0000000000000000       0x3d zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_put_claim
                0x0000000000000000       0x32 zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_get_claim
                0x0000000000000000       0x2b zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_area_finish
                0x0000000000000000       0x4a zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_put
                0x0000000000000000       0x6e zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_get
                0x0000000000000000       0x72 zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_peek
                0x0000000000000000       0x6d zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_item_put
                0x0000000000000000       0xc1 zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_item_get
                0x0000000000000000       0xef zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_info    0x0000000000000000      0xd02 zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_abbrev  0x0000000000000000      0x2b7 zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_loc     0x0000000000000000      0xa26 zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_aranges
                0x0000000000000000       0x60 zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_ranges  0x0000000000000000      0x118 zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_line    0x0000000000000000      0x687 zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_str     0x0000000000000000      0x4e7 zephyr/libzephyr.a(ring_buffer.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/libzephyr.a(ring_buffer.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_frame   0x0000000000000000      0x18c zephyr/libzephyr.a(ring_buffer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_exit_to_scheduler
                0x0000000000000000        0x1 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_idle_exit
                0x0000000000000000        0x1 zephyr/libzephyr.a(tracing_none.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .text.arch_cpu_atomic_idle
                0x0000000000000000       0x18 zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .text.arch_irq_disable
                0x0000000000000000        0x5 zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .text.arch_irq_is_enabled
                0x0000000000000000        0x5 zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .rodata.arch_thread_name_set.str1.1
                0x0000000000000000        0x3 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .text.arch_thread_name_set
                0x0000000000000000       0x64 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .text.posix_arch_get_unique_thread_id
                0x0000000000000000       0x19 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .text.posix_arch_thread_name_set
                0x0000000000000000       0x1c zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .text          0x0000000000000000        0x0 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .text.posix_change_cpu_state_and_wait
                0x0000000000000000       0x1d zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .text.posix_atomic_halt_cpu
                0x0000000000000000       0x1d zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
 .data          0x0000000000000000        0x0 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
 .text          0x0000000000000000        0x0 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
 .text.native_emb_addr_remap
                0x0000000000000000        0x3 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
 .debug_info    0x0000000000000000       0x66 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
 .debug_abbrev  0x0000000000000000       0x5e zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
 .debug_line    0x0000000000000000       0x8d zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
 .debug_str     0x0000000000000000      0x224 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
 .debug_frame   0x0000000000000000       0x24 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_remap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .data          0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .text.native_add_command_line_opts
                0x0000000000000000        0x5 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .text.native_get_cmd_line_args
                0x0000000000000000        0x5 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .text.native_get_test_cmd_line_args
                0x0000000000000000        0x5 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .debug_info    0x0000000000000000      0x235 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .debug_abbrev  0x0000000000000000       0xf1 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .debug_aranges
                0x0000000000000000       0x30 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .debug_ranges  0x0000000000000000       0x20 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .debug_line    0x0000000000000000      0x11d zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .debug_str     0x0000000000000000      0x363 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .debug_frame   0x0000000000000000       0x44 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cmdline.c.obj)
 .text          0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .data          0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .text.arch_busy_wait
                0x0000000000000000       0x3f zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .text.posix_cpu_hold
                0x0000000000000000       0x9c zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .debug_info    0x0000000000000000      0x24f zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .debug_abbrev  0x0000000000000000       0xfb zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .debug_loc     0x0000000000000000       0x69 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .debug_line    0x0000000000000000      0x327 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .debug_str     0x0000000000000000      0x3a7 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .debug_frame   0x0000000000000000       0x64 zephyr/boards/native/native_sim/libboards__native__native_sim.a(cpu_wait.c.obj)
 .text          0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
 .data          0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
 .text          0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .data          0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .text.posix_irq_disable
                0x0000000000000000        0x5 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .text.posix_irq_is_enabled
                0x0000000000000000        0x5 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .text.posix_get_current_irq
                0x0000000000000000        0x6 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .text.posix_sw_set_pending_IRQ
                0x0000000000000000        0x5 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .text.posix_sw_clear_pending_IRQ
                0x0000000000000000        0x5 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .text          0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .data          0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .text.posix_exit
                0x0000000000000000        0xe zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .text.posix_vprint_error_and_exit
                0x0000000000000000       0x11 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .text.posix_vprint_warning
                0x0000000000000000        0x5 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .text.posix_vprint_trace
                0x0000000000000000        0x5 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .text.posix_trace_over_tty
                0x0000000000000000        0x5 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .text.posix_get_hw_cycle
                0x0000000000000000        0xc zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .rodata.posix_flush_stdout.str1.1
                0x0000000000000000        0x3 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .text.posix_flush_stdout
                0x0000000000000000       0x3c zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_set_timeout
                0x0000000000000000        0x1 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_idle_exit
                0x0000000000000000        0x1 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_info    0x0000000000000000       0xe3 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_abbrev  0x0000000000000000       0x7e zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_line    0x0000000000000000       0xc2 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_str     0x0000000000000000      0x2e5 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_frame   0x0000000000000000       0x34 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .text.sys_clock_cycle_get_32
                0x0000000000000000        0x6 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .text.sys_clock_cycle_get_64
                0x0000000000000000        0xc zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .text.np_timer_isr_test_hook
                0x0000000000000000       0x10 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .text.sys_clock_disable
                0x0000000000000000       0x20 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.arch_system_halt
                0x0000000000000000        0xd zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.k_fatal_halt
                0x0000000000000000        0xe zephyr/kernel/libkernel.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_early_memset
                0x0000000000000000       0x12 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_early_memcpy
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_bss_zero
                0x0000000000000000        0x1 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_impl_device_init
                0x0000000000000000       0x1c zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_early_rand_get
                0x0000000000000000       0xa1 zephyr/kernel/libkernel.a(init.c.obj)
 .data.state.1  0x0000000000000000        0x8 zephyr/kernel/libkernel.a(init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .text.arch_spin_relax
                0x0000000000000000        0x2 zephyr/kernel/libkernel.a(idle.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_init
                0x0000000000000000       0x2a zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_give
                0x0000000000000000       0x91 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_take
                0x0000000000000000       0x67 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_reset
                0x0000000000000000       0x9f zephyr/kernel/libkernel.a(sem.c.obj)
 .bss.lock      0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_info    0x0000000000000000     0x10f7 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_abbrev  0x0000000000000000      0x411 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_loc     0x0000000000000000      0x757 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_ranges  0x0000000000000000      0x280 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_line    0x0000000000000000      0x929 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_str     0x0000000000000000      0x8f9 zephyr/kernel/libkernel.a(sem.c.obj)
 .comment       0x0000000000000000       0x2c zephyr/kernel/libkernel.a(sem.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_frame   0x0000000000000000       0xd8 zephyr/kernel/libkernel.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_is_in_isr
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_is_preempt_thread
                0x0000000000000000       0x1c zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_priority_get
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_name_set
                0x0000000000000000        0x6 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_name_get
                0x0000000000000000        0x3 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_name_copy
                0x0000000000000000        0x6 zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.k_thread_state_str.str1.1
                0x0000000000000000        0x3 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_state_str
                0x0000000000000000       0xa1 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_create
                0x0000000000000000       0x6f zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_init_thread_base
                0x0000000000000000       0x33 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_user_mode_enter
                0x0000000000000000       0x29 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_get
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_all_get
                0x0000000000000000        0xe zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_cpu_get
                0x0000000000000000        0xe zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x41 zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.state_string.0
                0x0000000000000000       0x40 zephyr/kernel/libkernel.a(thread.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.unready_thread
                0x0000000000000000       0x63 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.add_thread_timeout
                0x0000000000000000       0x2a zephyr/kernel/libkernel.a(sched.c.obj)
 .text.add_to_waitq_locked
                0x0000000000000000       0x5e zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_requeue_current
                0x0000000000000000       0x63 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_move_thread_to_end_of_prio_q
                0x0000000000000000       0x29 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_suspend
                0x0000000000000000      0x13b zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_pend_thread
                0x0000000000000000       0x48 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unpend_thread_no_timeout
                0x0000000000000000       0x27 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_pend_curr
                0x0000000000000000       0x48 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unpend1_no_timeout
                0x0000000000000000       0x3e zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unpend_thread
                0x0000000000000000       0x22 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_thread_prio_set
                0x0000000000000000      0x13e zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_resume
                0x0000000000000000       0x48 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_swap_next_thread
                0x0000000000000000        0x6 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unpend_all
                0x0000000000000000       0x3a zephyr/kernel/libkernel.a(sched.c.obj)
 .text.init_ready_q
                0x0000000000000000       0x11 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_priority_set
                0x0000000000000000       0x33 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_reschedule
                0x0000000000000000       0x66 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.k_can_yield
                0x0000000000000000       0x36 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_yield
                0x0000000000000000       0xb9 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_tick_sleep
                0x0000000000000000       0x89 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_sleep
                0x0000000000000000       0x54 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_usleep
                0x0000000000000000       0x31 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_join
                0x0000000000000000       0x92 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_wake
                0x0000000000000000       0x62 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_wait
                0x0000000000000000       0x35 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_waitq_walk
                0x0000000000000000       0x54 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unready_thread
                0x0000000000000000       0x21 zephyr/kernel/libkernel.a(sched.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .text.k_sched_time_slice_set
                0x0000000000000000       0x62 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.timeout_rem
                0x0000000000000000       0x54 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_remaining
                0x0000000000000000       0x55 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_expires
                0x0000000000000000       0x45 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_get_next_timeout_expiry
                0x0000000000000000       0x2f zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.sys_clock_tick_get
                0x0000000000000000       0x3d zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.sys_clock_tick_get_32
                0x0000000000000000        0xd zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_impl_k_uptime_ticks
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.sys_timepoint_calc
                0x0000000000000000       0x6b zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.sys_timepoint_timeout
                0x0000000000000000       0x82 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_device_get_all_static
                0x0000000000000000       0x1b zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_impl_device_is_ready
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_impl_device_get_binding
                0x0000000000000000       0x59 zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_impl_device_deinit
                0x0000000000000000       0x3b zephyr/kernel/libkernel.a(device.c.obj)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map


.interp
 *(SORT_BY_ALIGNMENT(.interp))

.note.gnu.build-id
 *(SORT_BY_ALIGNMENT(.note.gnu.build-id))

.hash
 *(SORT_BY_ALIGNMENT(.hash))

.gnu.hash
 *(SORT_BY_ALIGNMENT(.gnu.hash))

.dynsym
 *(SORT_BY_ALIGNMENT(.dynsym))

.dynstr
 *(SORT_BY_ALIGNMENT(.dynstr))

.gnu.version
 *(SORT_BY_ALIGNMENT(.gnu.version))

.gnu.version_d
 *(SORT_BY_ALIGNMENT(.gnu.version_d))

.gnu.version_r
 *(SORT_BY_ALIGNMENT(.gnu.version_r))

.rel.init
 *(SORT_BY_ALIGNMENT(.rel.init))

.rel.text
 *(SORT_BY_ALIGNMENT(.rel.text))

.rel.fini
 *(SORT_BY_ALIGNMENT(.rel.fini))

.rel.rodata
 *(SORT_BY_ALIGNMENT(.rel.rodata))

.rel.data.rel.ro
 *(SORT_BY_ALIGNMENT(.rel.data.rel.ro))

.rel.data
 *(SORT_BY_ALIGNMENT(.rel.data))

.rel.tdata
 *(SORT_BY_ALIGNMENT(.rel.tdata))

.rel.tbss
 *(SORT_BY_ALIGNMENT(.rel.tbss))

.rel.ctors
 *(SORT_BY_ALIGNMENT(.rel.ctors))

.rel.dtors
 *(SORT_BY_ALIGNMENT(.rel.dtors))

.rel.got
 *(SORT_BY_ALIGNMENT(.rel.got))

.rel.bss
 *(SORT_BY_ALIGNMENT(.rel.bss))

.rel.ifunc
 *(SORT_BY_ALIGNMENT(.rel.ifunc))

.rel.plt
 *(SORT_BY_ALIGNMENT(.rel.plt))

.relr.dyn
 *(SORT_BY_ALIGNMENT(.relr.dyn))

.init
 *(SORT_NONE(.init))

.plt
 *(SORT_BY_ALIGNMENT(.plt))

.plt.got
 *(SORT_BY_ALIGNMENT(.plt.got))

.plt.sec
 *(SORT_BY_ALIGNMENT(.plt.sec))

.text
 *(SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.stub))
 *(SORT_BY_ALIGNMENT(.gnu.warning))

.text._OffsetAbsSyms
                0x0000000000000000        0x1
 .text._OffsetAbsSyms
                0x0000000000000000        0x1 zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
                0x0000000000000000                _OffsetAbsSyms

.text.main      0x0000000000000000       0x2f
 .text.main     0x0000000000000000       0x2f app/libapp.a(main.c.obj)
                0x0000000000000000                main

.text.arch_printk_char_out
                0x0000000000000000        0x3
 .text.arch_printk_char_out
                0x0000000000000000        0x3 zephyr/libzephyr.a(printk.c.obj)
                0x0000000000000000                arch_printk_char_out

.text.char_out  0x0000000000000000        0x6
 .text.char_out
                0x0000000000000000        0x6 zephyr/libzephyr.a(printk.c.obj)

.text.__printk_hook_install
                0x0000000000000000        0xd
 .text.__printk_hook_install
                0x0000000000000000        0xd zephyr/libzephyr.a(printk.c.obj)
                0x0000000000000000                __printk_hook_install

.text.vprintk   0x0000000000000000       0x1f
 .text.vprintk  0x0000000000000000       0x1f zephyr/libzephyr.a(printk.c.obj)
                0x0000000000000000                vprintk

.text.printk    0x0000000000000000       0x17
 .text.printk   0x0000000000000000       0x17 zephyr/libzephyr.a(printk.c.obj)
                0x0000000000000000                printk

.text.z_thread_entry
                0x0000000000000000       0x3a
 .text.z_thread_entry
                0x0000000000000000       0x3a zephyr/libzephyr.a(thread_entry.c.obj)
                0x0000000000000000                z_thread_entry

.text.outs      0x0000000000000000       0x4b
 .text.outs     0x0000000000000000       0x4b zephyr/libzephyr.a(cbprintf_complete.c.obj)

.text.extract_decimal
                0x0000000000000000       0x37
 .text.extract_decimal
                0x0000000000000000       0x37 zephyr/libzephyr.a(cbprintf_complete.c.obj)

.text.encode_uint
                0x0000000000000000       0xd9
 .text.encode_uint
                0x0000000000000000       0xd9 zephyr/libzephyr.a(cbprintf_complete.c.obj)

.text.z_cbvprintf_impl
                0x0000000000000000      0x7f1
 .text.z_cbvprintf_impl
                0x0000000000000000      0x7f1 zephyr/libzephyr.a(cbprintf_complete.c.obj)
                0x0000000000000000                z_cbvprintf_impl

.text.assert_print
                0x0000000000000000       0x17
 .text.assert_print
                0x0000000000000000       0x17 zephyr/libzephyr.a(assert.c.obj)
                0x0000000000000000                assert_print

.text._ConfigAbsSyms
                0x0000000000000000        0x1
 .text._ConfigAbsSyms
                0x0000000000000000        0x1 zephyr/libzephyr.a(configs.c.obj)
                0x0000000000000000                _ConfigAbsSyms

.text.sys_trace_isr_enter
                0x0000000000000000        0x1
 .text.sys_trace_isr_enter
                0x0000000000000000        0x1 zephyr/libzephyr.a(tracing_none.c.obj)
                0x0000000000000000                sys_trace_isr_enter

.text.sys_trace_isr_exit
                0x0000000000000000        0x1
 .text.sys_trace_isr_exit
                0x0000000000000000        0x1 zephyr/libzephyr.a(tracing_none.c.obj)
                0x0000000000000000                sys_trace_isr_exit

.text.sys_trace_idle
                0x0000000000000000        0x1
 .text.sys_trace_idle
                0x0000000000000000        0x1 zephyr/libzephyr.a(tracing_none.c.obj)
                0x0000000000000000                sys_trace_idle

.text.arch_cpu_idle
                0x0000000000000000       0x16
 .text.arch_cpu_idle
                0x0000000000000000       0x16 zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
                0x0000000000000000                arch_cpu_idle

.text.arch_system_halt
                0x0000000000000000       0x27
 .text.arch_system_halt
                0x0000000000000000       0x27 zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
                0x0000000000000000                arch_system_halt

.text.arch_irq_enable
                0x0000000000000000        0x5
 .text.arch_irq_enable
                0x0000000000000000        0x5 zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
                0x0000000000000000                arch_irq_enable

.text.arch_swap
                0x0000000000000000       0x50
 .text.arch_swap
                0x0000000000000000       0x50 zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
                0x0000000000000000                arch_swap

.text.arch_switch_to_main_thread
                0x0000000000000000       0x1c
 .text.arch_switch_to_main_thread
                0x0000000000000000       0x1c zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
                0x0000000000000000                arch_switch_to_main_thread

.text.arch_new_thread
                0x0000000000000000       0x43
 .text.arch_new_thread
                0x0000000000000000       0x43 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
                0x0000000000000000                arch_new_thread

.text.posix_arch_thread_entry
                0x0000000000000000       0x1d
 .text.posix_arch_thread_entry
                0x0000000000000000       0x1d zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
                0x0000000000000000                posix_arch_thread_entry

.text.z_impl_k_thread_abort
                0x0000000000000000       0x84
 .text.z_impl_k_thread_abort
                0x0000000000000000       0x84 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
                0x0000000000000000                z_impl_k_thread_abort

.text.posix_arch_init
                0x0000000000000000       0x1a
 .text.posix_arch_init
                0x0000000000000000       0x1a zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
                0x0000000000000000                posix_arch_init

.text.posix_arch_clean_up
                0x0000000000000000       0x16
 .text.posix_arch_clean_up
                0x0000000000000000       0x16 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
                0x0000000000000000                posix_arch_clean_up

.text.posix_swap
                0x0000000000000000       0x17
 .text.posix_swap
                0x0000000000000000       0x17 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
                0x0000000000000000                posix_swap

.text.posix_main_thread_start
                0x0000000000000000       0x19
 .text.posix_main_thread_start
                0x0000000000000000       0x19 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
                0x0000000000000000                posix_main_thread_start

.text.posix_new_thread
                0x0000000000000000       0x19
 .text.posix_new_thread
                0x0000000000000000       0x19 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
                0x0000000000000000                posix_new_thread

.text.posix_abort_thread
                0x0000000000000000       0x19
 .text.posix_abort_thread
                0x0000000000000000       0x19 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
                0x0000000000000000                posix_abort_thread

.text.posix_is_cpu_running
                0x0000000000000000       0x16
 .text.posix_is_cpu_running
                0x0000000000000000       0x16 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
                0x0000000000000000                posix_is_cpu_running

.text.posix_interrupt_raised
                0x0000000000000000       0x16
 .text.posix_interrupt_raised
                0x0000000000000000       0x16 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
                0x0000000000000000                posix_interrupt_raised

.text.posix_halt_cpu
                0x0000000000000000       0x1a
 .text.posix_halt_cpu
                0x0000000000000000       0x1a zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
                0x0000000000000000                posix_halt_cpu

.text.posix_boot_cpu
                0x0000000000000000       0x2c
 .text.posix_boot_cpu
                0x0000000000000000       0x2c zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
                0x0000000000000000                posix_boot_cpu

.text.posix_soc_clean_up
                0x0000000000000000       0x28
 .text.posix_soc_clean_up
                0x0000000000000000       0x28 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
                0x0000000000000000                posix_soc_clean_up

.text.run_native_tasks
                0x0000000000000000       0x29
 .text.run_native_tasks
                0x0000000000000000       0x29 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
                0x0000000000000000                run_native_tasks

.text.posix_irq_handler
                0x0000000000000000      0x126
 .text.posix_irq_handler
                0x0000000000000000      0x126 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
                0x0000000000000000                posix_irq_handler

.text.posix_irq_lock
                0x0000000000000000       0x12
 .text.posix_irq_lock
                0x0000000000000000       0x12 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
                0x0000000000000000                posix_irq_lock

.text.posix_irq_unlock
                0x0000000000000000        0x5
 .text.posix_irq_unlock
                0x0000000000000000        0x5 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
                0x0000000000000000                posix_irq_unlock

.text.posix_irq_full_unlock
                0x0000000000000000       0x12
 .text.posix_irq_full_unlock
                0x0000000000000000       0x12 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
                0x0000000000000000                posix_irq_full_unlock

.text.posix_irq_enable
                0x0000000000000000        0x5
 .text.posix_irq_enable
                0x0000000000000000        0x5 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
                0x0000000000000000                posix_irq_enable

.text.posix_isr_declare
                0x0000000000000000       0x4c
 .text.posix_isr_declare
                0x0000000000000000       0x4c zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
                0x0000000000000000                posix_isr_declare

.text.posix_irq_priority_set
                0x0000000000000000       0x21
 .text.posix_irq_priority_set
                0x0000000000000000       0x21 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
                0x0000000000000000                posix_irq_priority_set

.text.set_realtime_default
                0x0000000000000000       0x12
 .text.set_realtime_default
                0x0000000000000000       0x12 zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)

.text.posix_print_error_and_exit
                0x0000000000000000       0x12
 .text.posix_print_error_and_exit
                0x0000000000000000       0x12 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
                0x0000000000000000                posix_print_error_and_exit

.text.posix_print_warning
                0x0000000000000000       0x17
 .text.posix_print_warning
                0x0000000000000000       0x17 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
                0x0000000000000000                posix_print_warning

.text.posix_print_trace
                0x0000000000000000       0x17
 .text.posix_print_trace
                0x0000000000000000       0x17 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
                0x0000000000000000                posix_print_trace

.text.posix_arch_console_init
                0x0000000000000000       0x17
 .text.posix_arch_console_init
                0x0000000000000000       0x17 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)

.text.print_char
                0x0000000000000000       0x66
 .text.print_char
                0x0000000000000000       0x66 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)

.text.np_timer_isr
                0x0000000000000000       0x85
 .text.np_timer_isr
                0x0000000000000000       0x85 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)

.text.sys_clock_driver_init
                0x0000000000000000       0x6a
 .text.sys_clock_driver_init
                0x0000000000000000       0x6a zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)

.text.sys_clock_set_timeout
                0x0000000000000000       0x34
 .text.sys_clock_set_timeout
                0x0000000000000000       0x34 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
                0x0000000000000000                sys_clock_set_timeout

.text.sys_clock_elapsed
                0x0000000000000000       0x3d
 .text.sys_clock_elapsed
                0x0000000000000000       0x3d zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
                0x0000000000000000                sys_clock_elapsed

.text.k_sys_fatal_error_handler
                0x0000000000000000        0xe
 .text.k_sys_fatal_error_handler
                0x0000000000000000        0xe zephyr/kernel/libkernel.a(fatal.c.obj)
                0x0000000000000000                k_sys_fatal_error_handler

.text.z_fatal_error
                0x0000000000000000       0x45
 .text.z_fatal_error
                0x0000000000000000       0x45 zephyr/kernel/libkernel.a(fatal.c.obj)
                0x0000000000000000                z_fatal_error

.text.do_device_init
                0x0000000000000000       0x41
 .text.do_device_init
                0x0000000000000000       0x41 zephyr/kernel/libkernel.a(init.c.obj)

.text.z_sys_init_run_level
                0x0000000000000000       0x43
 .text.z_sys_init_run_level
                0x0000000000000000       0x43 zephyr/kernel/libkernel.a(init.c.obj)

.text.bg_thread_main
                0x0000000000000000       0xe7
 .text.bg_thread_main
                0x0000000000000000       0xe7 zephyr/kernel/libkernel.a(init.c.obj)

.text.z_init_cpu
                0x0000000000000000       0x65
 .text.z_init_cpu
                0x0000000000000000       0x65 zephyr/kernel/libkernel.a(init.c.obj)
                0x0000000000000000                z_init_cpu

.text.z_cstart  0x0000000000000000       0xbd
 .text.z_cstart
                0x0000000000000000       0xbd zephyr/kernel/libkernel.a(init.c.obj)
                0x0000000000000000                z_cstart

.text.idle      0x0000000000000000       0x12
 .text.idle     0x0000000000000000       0x12 zephyr/kernel/libkernel.a(idle.c.obj)
                0x0000000000000000                idle

.text.z_setup_new_thread
                0x0000000000000000       0x83
 .text.z_setup_new_thread
                0x0000000000000000       0x83 zephyr/kernel/libkernel.a(thread.c.obj)
                0x0000000000000000                z_setup_new_thread

.text.z_dummy_thread_init
                0x0000000000000000       0x1a
 .text.z_dummy_thread_init
                0x0000000000000000       0x1a zephyr/kernel/libkernel.a(thread.c.obj)
                0x0000000000000000                z_dummy_thread_init

.text.sys_dlist_remove
                0x0000000000000000       0x18
 .text.sys_dlist_remove
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(sched.c.obj)

.text.unpend_thread_no_timeout
                0x0000000000000000       0x18
 .text.unpend_thread_no_timeout
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(sched.c.obj)

.text.ready_thread
                0x0000000000000000       0xbf
 .text.ready_thread
                0x0000000000000000       0xbf zephyr/kernel/libkernel.a(sched.c.obj)

.text.move_thread_to_end_of_prio_q
                0x0000000000000000       0xbd
 .text.move_thread_to_end_of_prio_q
                0x0000000000000000       0xbd zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                move_thread_to_end_of_prio_q

.text.z_ready_thread
                0x0000000000000000       0x21
 .text.z_ready_thread
                0x0000000000000000       0x21 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                z_ready_thread

.text.z_sched_wake_thread
                0x0000000000000000       0x38
 .text.z_sched_wake_thread
                0x0000000000000000       0x38 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                z_sched_wake_thread

.text.z_thread_timeout
                0x0000000000000000       0x19
 .text.z_thread_timeout
                0x0000000000000000       0x19 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                z_thread_timeout

.text.z_reschedule
                0x0000000000000000       0x34
 .text.z_reschedule
                0x0000000000000000       0x34 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                z_reschedule

.text.z_reschedule_irqlock
                0x0000000000000000       0x34
 .text.z_reschedule_irqlock
                0x0000000000000000       0x34 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                z_reschedule_irqlock

.text.k_sched_lock
                0x0000000000000000       0x22
 .text.k_sched_lock
                0x0000000000000000       0x22 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                k_sched_lock

.text.k_sched_unlock
                0x0000000000000000       0x76
 .text.k_sched_unlock
                0x0000000000000000       0x76 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                k_sched_unlock

.text.z_sched_init
                0x0000000000000000       0x15
 .text.z_sched_init
                0x0000000000000000       0x15 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                z_sched_init

.text.z_impl_k_wakeup
                0x0000000000000000       0x54
 .text.z_impl_k_wakeup
                0x0000000000000000       0x54 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                z_impl_k_wakeup

.text.z_impl_k_sched_current_thread_query
                0x0000000000000000        0x6
 .text.z_impl_k_sched_current_thread_query
                0x0000000000000000        0x6 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                z_impl_k_sched_current_thread_query

.text.z_thread_abort
                0x0000000000000000      0x16f
 .text.z_thread_abort
                0x0000000000000000      0x16f zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                z_thread_abort

.text.slice_timeout
                0x0000000000000000       0x1d
 .text.slice_timeout
                0x0000000000000000       0x1d zephyr/kernel/libkernel.a(timeslicing.c.obj)

.text.thread_is_sliceable
                0x0000000000000000       0x3f
 .text.thread_is_sliceable
                0x0000000000000000       0x3f zephyr/kernel/libkernel.a(timeslicing.c.obj)
                0x0000000000000000                thread_is_sliceable

.text.z_reset_time_slice
                0x0000000000000000       0x53
 .text.z_reset_time_slice
                0x0000000000000000       0x53 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                0x0000000000000000                z_reset_time_slice

.text.z_time_slice
                0x0000000000000000       0x63
 .text.z_time_slice
                0x0000000000000000       0x63 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                0x0000000000000000                z_time_slice

.text.first     0x0000000000000000        0xf
 .text.first    0x0000000000000000        0xf zephyr/kernel/libkernel.a(timeout.c.obj)

.text.next_timeout
                0x0000000000000000       0x53
 .text.next_timeout
                0x0000000000000000       0x53 zephyr/kernel/libkernel.a(timeout.c.obj)

.text.elapsed   0x0000000000000000       0x11
 .text.elapsed  0x0000000000000000       0x11 zephyr/kernel/libkernel.a(timeout.c.obj)

.text.remove_timeout
                0x0000000000000000       0x3d
 .text.remove_timeout
                0x0000000000000000       0x3d zephyr/kernel/libkernel.a(timeout.c.obj)

.text.z_add_timeout
                0x0000000000000000      0x1c5
 .text.z_add_timeout
                0x0000000000000000      0x1c5 zephyr/kernel/libkernel.a(timeout.c.obj)
                0x0000000000000000                z_add_timeout

.text.z_abort_timeout
                0x0000000000000000       0x6e
 .text.z_abort_timeout
                0x0000000000000000       0x6e zephyr/kernel/libkernel.a(timeout.c.obj)
                0x0000000000000000                z_abort_timeout

.text.sys_clock_announce
                0x0000000000000000       0xfc
 .text.sys_clock_announce
                0x0000000000000000       0xfc zephyr/kernel/libkernel.a(timeout.c.obj)
                0x0000000000000000                sys_clock_announce

.text.boot_banner
                0x0000000000000000       0x15
 .text.boot_banner
                0x0000000000000000       0x15 zephyr/kernel/libkernel.a(banner.c.obj)
                0x0000000000000000                boot_banner

.text.z_device_state_init
                0x0000000000000000        0x1
 .text.z_device_state_init
                0x0000000000000000        0x1 zephyr/kernel/libkernel.a(device.c.obj)
                0x0000000000000000                z_device_state_init

.native_sim_if  0x0000000000000001       0x8f
 *(SORT_BY_ALIGNMENT(.native_sim_if))
 .native_sim_if
                0x0000000000000001       0x5c zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
                0x0000000000000001                nsif_cpu0_pre_cmdline_hooks
                0x0000000000000013                nsif_cpu0_pre_hw_init_hooks
                0x0000000000000025                nsif_cpu0_boot
                0x0000000000000049                nsif_cpu0_cleanup
                0x0000000000000058                nsif_cpu0_irq_raised
 .native_sim_if
                0x000000000000005d       0x33 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
                0x000000000000005d                nsif_cpu0_irq_raised_from_sw
 *(SORT_BY_ALIGNMENT(.native_sim_if.*))

.fini
 *(SORT_NONE(.fini))

.rodata
 *(SORT_BY_ALIGNMENT(.rodata))

.rodata.main.str1.1
                0x0000000000000000       0x34
 .rodata.main.str1.1
                0x0000000000000000       0x34 app/libapp.a(main.c.obj)

.rodata.z_thread_entry.str1.1
                0x0000000000000000       0x4e
 .rodata.z_thread_entry.str1.1
                0x0000000000000000       0x4e zephyr/libzephyr.a(thread_entry.c.obj)

.rodata.z_cbvprintf_impl.str1.1
                0x0000000000000000        0x6
 .rodata.z_cbvprintf_impl.str1.1
                0x0000000000000000        0x6 zephyr/libzephyr.a(cbprintf_complete.c.obj)

.rodata.z_cbvprintf_impl
                0x0000000000000000       0xc0
 .rodata.z_cbvprintf_impl
                0x0000000000000000       0xc0 zephyr/libzephyr.a(cbprintf_complete.c.obj)

.rodata.arch_system_halt.str1.1
                0x0000000000000000       0x6c
 .rodata.arch_system_halt.str1.1
                0x0000000000000000       0x6c zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)

.rodata.z_impl_k_thread_abort.str1.1
                0x0000000000000000       0x77
 .rodata.z_impl_k_thread_abort.str1.1
                0x0000000000000000       0x77 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)

.rodata.native_pre_tasks.0
                0x0000000000000000       0x18
 .rodata.native_pre_tasks.0
                0x0000000000000000       0x18 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)

.rodata.posix_irq_handler.str1.1
                0x0000000000000000       0x2e
 .rodata.posix_irq_handler.str1.1
                0x0000000000000000       0x2e zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)

.rodata.str1.1  0x0000000000000000       0x35
 .rodata.str1.1
                0x0000000000000000       0x35 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)

.rodata.posix_isr_declare.str1.1
                0x0000000000000000       0x32
 .rodata.posix_isr_declare.str1.1
                0x0000000000000000       0x32 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)

.rodata.__func__.1
                0x0000000000000000       0x1d
 .rodata.__func__.1
                0x0000000000000000       0x1d zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)

.rodata.print_char.str1.1
                0x0000000000000000        0x4
 .rodata.print_char.str1.1
                0x0000000000000000        0x4 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)

.rodata.cst16   0x0000000000000000       0x30
 .rodata.cst16  0x0000000000000000       0x10 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .rodata.cst16  0x0000000000000010       0x20 zephyr/kernel/libkernel.a(timeout.c.obj)

.rodata.z_cstart.str1.1
                0x0000000000000000       0x4b
 .rodata.z_cstart.str1.1
                0x0000000000000000       0x4b zephyr/kernel/libkernel.a(init.c.obj)

.rodata.levels.0
                0x0000000000000000       0x18
 .rodata.levels.0
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(init.c.obj)

.rodata.z_impl_k_thread_suspend.str1.1
                0x0000000000000000       0x2b
 .rodata.z_impl_k_thread_suspend.str1.1
                0x0000000000000000       0x2b zephyr/kernel/libkernel.a(sched.c.obj)

.rodata.boot_banner.str1.1
                0x0000000000000000       0x3e
 .rodata.boot_banner.str1.1
                0x0000000000000000       0x3e zephyr/kernel/libkernel.a(banner.c.obj)

.rodata1
 *(SORT_BY_ALIGNMENT(.rodata1))

.eh_frame_hdr
 *(SORT_BY_ALIGNMENT(.eh_frame_hdr))

.eh_frame
 *(SORT_BY_ALIGNMENT(.eh_frame))

.gcc_except_table
 *(SORT_BY_ALIGNMENT(.gcc_except_table))

.gnu_extab
 *(SORT_BY_ALIGNMENT(.gnu_extab*))

.exception_ranges
 *(SORT_BY_ALIGNMENT(.exception_ranges))

.eh_frame
 *(SORT_BY_ALIGNMENT(.eh_frame))

.gnu_extab
 *(SORT_BY_ALIGNMENT(.gnu_extab))

.gcc_except_table
 *(SORT_BY_ALIGNMENT(.gcc_except_table))

.exception_ranges
 *(SORT_BY_ALIGNMENT(.exception_ranges))

.tdata
 *(SORT_BY_ALIGNMENT(.tdata))

.tbss
 *(SORT_BY_ALIGNMENT(.tbss))

.jcr
 *(SORT_BY_ALIGNMENT(.jcr))

.dynamic
 *(SORT_BY_ALIGNMENT(.dynamic))

.got
 *(SORT_BY_ALIGNMENT(.got))

.got.plt
 *(SORT_BY_ALIGNMENT(.got.plt))

.data
 *(SORT_BY_ALIGNMENT(.data))
LOAD zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
LOAD zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
LOAD app/libapp.a
LOAD zephyr/libzephyr.a
LOAD zephyr/arch/arch/posix/core/libarch__posix__core.a
LOAD zephyr/soc/soc/native/libsoc__native__inf_clock.a
LOAD zephyr/boards/native/native_sim/libboards__native__native_sim.a
LOAD zephyr/drivers/console/libdrivers__console.a
LOAD zephyr/drivers/timer/libdrivers__timer.a
LOAD zephyr/kernel/libkernel.a

.data._char_out
                0x0000000000000000        0x4
 .data._char_out
                0x0000000000000000        0x4 zephyr/libzephyr.a(printk.c.obj)

.data.currently_running_irq
                0x0000000000000000        0x4
 .data.currently_running_irq
                0x0000000000000000        0x4 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)

.data.slice_ticks
                0x0000000000000000        0x4
 .data.slice_ticks
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeslicing.c.obj)

.data.timeout_list
                0x0000000000000000        0x8
 .data.timeout_list
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)

.native_sim_if.data
 *(SORT_BY_ALIGNMENT(.native_sim_if.data))

rom_start

initlevel       0x0000000000000008        0x8
                0x0000000000000008                __init_start = .
                0x0000000000000008                __init_EARLY_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY_P_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY_P_??_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY_P_???_*)))
                0x0000000000000008                __init_PRE_KERNEL_1_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1_P_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1_P_??_*)))
 .z_init_PRE_KERNEL_1_P_99_SUB_0_
                0x0000000000000008        0x4 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1_P_???_*)))
                0x000000000000000c                __init_PRE_KERNEL_2_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2_P_?_*)))
 .z_init_PRE_KERNEL_2_P_0_SUB_0_
                0x000000000000000c        0x4 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2_P_??_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2_P_???_*)))
                0x0000000000000010                __init_POST_KERNEL_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL_P_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL_P_??_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL_P_???_*)))
                0x0000000000000010                __init_APPLICATION_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION_P_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION_P_??_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION_P_???_*)))
                0x0000000000000010                __init_SMP_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP_P_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP_P_??_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP_P_???_*)))
                0x0000000000000010                __init_end = .

device_area     0x0000000000000010        0x0
                0x0000000000000010                _device_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_??_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_???_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_????_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_?????_*)))
                0x0000000000000010                _device_list_end = .

service_area    0x0000000000000010        0x8
                0x0000000000000010                _service_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._service.static.*_?_*)))
 ._service.static.2_0_
                0x0000000000000010        0x4 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._service.static.*_??_*)))
 ._service.static.1_99_
                0x0000000000000014        0x4 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._service.static.*_???_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._service.static.*_????_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._service.static.*_?????_*)))
                0x0000000000000018                _service_list_end = .

initlevel_error
                0x0000000000000018        0x0
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_*)))
                0x0000000000000001                ASSERT ((SIZEOF (initlevel_error) == 0x0), Undefined initialization levels used.)

app_shmem_regions
                0x0000000000000018        0x0
                0x0000000000000018                __app_shmem_regions_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.app_regions.*)))
                0x0000000000000018                __app_shmem_regions_end = .

k_p4wq_initparam_area
                0x0000000000000018        0x0
                0x0000000000000018                _k_p4wq_initparam_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_p4wq_initparam.static.*)))
                0x0000000000000018                _k_p4wq_initparam_list_end = .

_static_thread_data_area
                0x0000000000000018        0x0
                0x0000000000000018                __static_thread_data_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__static_thread_data.static.*)))
                0x0000000000000018                __static_thread_data_list_end = .

device_deps     0x0000000000000018        0x0
                0x0000000000000018                __device_deps_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__device_deps_pass2*)))
                0x0000000000000018                __device_deps_end = .

shared_irq_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _shared_irq_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shared_irq_driver_api.static.*)))
                0x0000000000000018                _shared_irq_driver_api_list_end = .

crypto_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _crypto_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._crypto_driver_api.static.*)))
                0x0000000000000018                _crypto_driver_api_list_end = .

adc_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _adc_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._adc_driver_api.static.*)))
                0x0000000000000018                _adc_driver_api_list_end = .

auxdisplay_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _auxdisplay_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._auxdisplay_driver_api.static.*)))
                0x0000000000000018                _auxdisplay_driver_api_list_end = .

bbram_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _bbram_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bbram_driver_api.static.*)))
                0x0000000000000018                _bbram_driver_api_list_end = .

bt_hci_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _bt_hci_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_hci_driver_api.static.*)))
                0x0000000000000018                _bt_hci_driver_api_list_end = .

can_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _can_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._can_driver_api.static.*)))
                0x0000000000000018                _can_driver_api_list_end = .

cellular_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _cellular_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._cellular_driver_api.static.*)))
                0x0000000000000018                _cellular_driver_api_list_end = .

charger_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _charger_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._charger_driver_api.static.*)))
                0x0000000000000018                _charger_driver_api_list_end = .

clock_control_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _clock_control_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._clock_control_driver_api.static.*)))
                0x0000000000000018                _clock_control_driver_api_list_end = .

comparator_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _comparator_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._comparator_driver_api.static.*)))
                0x0000000000000018                _comparator_driver_api_list_end = .

coredump_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _coredump_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._coredump_driver_api.static.*)))
                0x0000000000000018                _coredump_driver_api_list_end = .

counter_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _counter_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._counter_driver_api.static.*)))
                0x0000000000000018                _counter_driver_api_list_end = .

dac_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _dac_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._dac_driver_api.static.*)))
                0x0000000000000018                _dac_driver_api_list_end = .

dai_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _dai_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._dai_driver_api.static.*)))
                0x0000000000000018                _dai_driver_api_list_end = .

display_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _display_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._display_driver_api.static.*)))
                0x0000000000000018                _display_driver_api_list_end = .

dma_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _dma_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._dma_driver_api.static.*)))
                0x0000000000000018                _dma_driver_api_list_end = .

edac_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _edac_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._edac_driver_api.static.*)))
                0x0000000000000018                _edac_driver_api_list_end = .

eeprom_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _eeprom_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._eeprom_driver_api.static.*)))
                0x0000000000000018                _eeprom_driver_api_list_end = .

emul_bbram_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _emul_bbram_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._emul_bbram_driver_api.static.*)))
                0x0000000000000018                _emul_bbram_driver_api_list_end = .

fuel_gauge_emul_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _fuel_gauge_emul_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._fuel_gauge_emul_driver_api.static.*)))
                0x0000000000000018                _fuel_gauge_emul_driver_api_list_end = .

emul_sensor_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _emul_sensor_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._emul_sensor_driver_api.static.*)))
                0x0000000000000018                _emul_sensor_driver_api_list_end = .

entropy_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _entropy_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._entropy_driver_api.static.*)))
                0x0000000000000018                _entropy_driver_api_list_end = .

espi_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _espi_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._espi_driver_api.static.*)))
                0x0000000000000018                _espi_driver_api_list_end = .

espi_saf_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _espi_saf_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._espi_saf_driver_api.static.*)))
                0x0000000000000018                _espi_saf_driver_api_list_end = .

flash_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _flash_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._flash_driver_api.static.*)))
                0x0000000000000018                _flash_driver_api_list_end = .

fpga_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _fpga_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._fpga_driver_api.static.*)))
                0x0000000000000018                _fpga_driver_api_list_end = .

fuel_gauge_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _fuel_gauge_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._fuel_gauge_driver_api.static.*)))
                0x0000000000000018                _fuel_gauge_driver_api_list_end = .

gnss_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _gnss_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._gnss_driver_api.static.*)))
                0x0000000000000018                _gnss_driver_api_list_end = .

gpio_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _gpio_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._gpio_driver_api.static.*)))
                0x0000000000000018                _gpio_driver_api_list_end = .

haptics_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _haptics_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._haptics_driver_api.static.*)))
                0x0000000000000018                _haptics_driver_api_list_end = .

hwspinlock_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _hwspinlock_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._hwspinlock_driver_api.static.*)))
                0x0000000000000018                _hwspinlock_driver_api_list_end = .

i2c_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _i2c_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._i2c_driver_api.static.*)))
                0x0000000000000018                _i2c_driver_api_list_end = .

i2c_target_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _i2c_target_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._i2c_target_driver_api.static.*)))
                0x0000000000000018                _i2c_target_driver_api_list_end = .

i2s_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _i2s_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._i2s_driver_api.static.*)))
                0x0000000000000018                _i2s_driver_api_list_end = .

i3c_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _i3c_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._i3c_driver_api.static.*)))
                0x0000000000000018                _i3c_driver_api_list_end = .

ipm_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _ipm_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ipm_driver_api.static.*)))
                0x0000000000000018                _ipm_driver_api_list_end = .

led_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _led_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._led_driver_api.static.*)))
                0x0000000000000018                _led_driver_api_list_end = .

led_strip_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _led_strip_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._led_strip_driver_api.static.*)))
                0x0000000000000018                _led_strip_driver_api_list_end = .

lora_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _lora_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._lora_driver_api.static.*)))
                0x0000000000000018                _lora_driver_api_list_end = .

mbox_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _mbox_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._mbox_driver_api.static.*)))
                0x0000000000000018                _mbox_driver_api_list_end = .

mdio_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _mdio_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._mdio_driver_api.static.*)))
                0x0000000000000018                _mdio_driver_api_list_end = .

mipi_dbi_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _mipi_dbi_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._mipi_dbi_driver_api.static.*)))
                0x0000000000000018                _mipi_dbi_driver_api_list_end = .

mipi_dsi_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _mipi_dsi_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._mipi_dsi_driver_api.static.*)))
                0x0000000000000018                _mipi_dsi_driver_api_list_end = .

mspi_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _mspi_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._mspi_driver_api.static.*)))
                0x0000000000000018                _mspi_driver_api_list_end = .

peci_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _peci_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._peci_driver_api.static.*)))
                0x0000000000000018                _peci_driver_api_list_end = .

ps2_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _ps2_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ps2_driver_api.static.*)))
                0x0000000000000018                _ps2_driver_api_list_end = .

ptp_clock_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _ptp_clock_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ptp_clock_driver_api.static.*)))
                0x0000000000000018                _ptp_clock_driver_api_list_end = .

pwm_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _pwm_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._pwm_driver_api.static.*)))
                0x0000000000000018                _pwm_driver_api_list_end = .

regulator_parent_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _regulator_parent_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._regulator_parent_driver_api.static.*)))
                0x0000000000000018                _regulator_parent_driver_api_list_end = .

regulator_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _regulator_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._regulator_driver_api.static.*)))
                0x0000000000000018                _regulator_driver_api_list_end = .

reset_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _reset_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._reset_driver_api.static.*)))
                0x0000000000000018                _reset_driver_api_list_end = .

retained_mem_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _retained_mem_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._retained_mem_driver_api.static.*)))
                0x0000000000000018                _retained_mem_driver_api_list_end = .

rtc_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _rtc_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._rtc_driver_api.static.*)))
                0x0000000000000018                _rtc_driver_api_list_end = .

sdhc_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _sdhc_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._sdhc_driver_api.static.*)))
                0x0000000000000018                _sdhc_driver_api_list_end = .

sensor_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _sensor_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._sensor_driver_api.static.*)))
                0x0000000000000018                _sensor_driver_api_list_end = .

smbus_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _smbus_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._smbus_driver_api.static.*)))
                0x0000000000000018                _smbus_driver_api_list_end = .

spi_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _spi_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._spi_driver_api.static.*)))
                0x0000000000000018                _spi_driver_api_list_end = .

stepper_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _stepper_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._stepper_driver_api.static.*)))
                0x0000000000000018                _stepper_driver_api_list_end = .

syscon_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _syscon_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._syscon_driver_api.static.*)))
                0x0000000000000018                _syscon_driver_api_list_end = .

tee_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _tee_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._tee_driver_api.static.*)))
                0x0000000000000018                _tee_driver_api_list_end = .

video_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _video_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._video_driver_api.static.*)))
                0x0000000000000018                _video_driver_api_list_end = .

w1_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _w1_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._w1_driver_api.static.*)))
                0x0000000000000018                _w1_driver_api_list_end = .

wdt_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _wdt_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._wdt_driver_api.static.*)))
                0x0000000000000018                _wdt_driver_api_list_end = .

can_transceiver_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _can_transceiver_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._can_transceiver_driver_api.static.*)))
                0x0000000000000018                _can_transceiver_driver_api_list_end = .

nrf_clock_control_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _nrf_clock_control_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._nrf_clock_control_driver_api.static.*)))
                0x0000000000000018                _nrf_clock_control_driver_api_list_end = .

i3c_target_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _i3c_target_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._i3c_target_driver_api.static.*)))
                0x0000000000000018                _i3c_target_driver_api_list_end = .

its_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _its_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._its_driver_api.static.*)))
                0x0000000000000018                _its_driver_api_list_end = .

vtd_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _vtd_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._vtd_driver_api.static.*)))
                0x0000000000000018                _vtd_driver_api_list_end = .

renesas_elc_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _renesas_elc_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._renesas_elc_driver_api.static.*)))
                0x0000000000000018                _renesas_elc_driver_api_list_end = .

tgpio_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _tgpio_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._tgpio_driver_api.static.*)))
                0x0000000000000018                _tgpio_driver_api_list_end = .

pcie_ctrl_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _pcie_ctrl_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._pcie_ctrl_driver_api.static.*)))
                0x0000000000000018                _pcie_ctrl_driver_api_list_end = .

pcie_ep_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _pcie_ep_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._pcie_ep_driver_api.static.*)))
                0x0000000000000018                _pcie_ep_driver_api_list_end = .

psi5_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _psi5_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._psi5_driver_api.static.*)))
                0x0000000000000018                _psi5_driver_api_list_end = .

sent_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _sent_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._sent_driver_api.static.*)))
                0x0000000000000018                _sent_driver_api_list_end = .

svc_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _svc_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._svc_driver_api.static.*)))
                0x0000000000000018                _svc_driver_api_list_end = .

uart_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _uart_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._uart_driver_api.static.*)))
                0x0000000000000018                _uart_driver_api_list_end = .

bc12_emul_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _bc12_emul_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bc12_emul_driver_api.static.*)))
                0x0000000000000018                _bc12_emul_driver_api_list_end = .

bc12_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _bc12_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bc12_driver_api.static.*)))
                0x0000000000000018                _bc12_driver_api_list_end = .

usbc_ppc_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _usbc_ppc_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._usbc_ppc_driver_api.static.*)))
                0x0000000000000018                _usbc_ppc_driver_api_list_end = .

tcpc_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _tcpc_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._tcpc_driver_api.static.*)))
                0x0000000000000018                _tcpc_driver_api_list_end = .

usbc_vbus_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _usbc_vbus_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._usbc_vbus_driver_api.static.*)))
                0x0000000000000018                _usbc_vbus_driver_api_list_end = .

ivshmem_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _ivshmem_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ivshmem_driver_api.static.*)))
                0x0000000000000018                _ivshmem_driver_api_list_end = .

ethphy_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _ethphy_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ethphy_driver_api.static.*)))
                0x0000000000000018                _ethphy_driver_api_list_end = .

virtio_driver_api_area
                0x0000000000000018        0x0
                0x0000000000000018                _virtio_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._virtio_driver_api.static.*)))
                0x0000000000000018                _virtio_driver_api_list_end = .

ztest           0x0000000000000018        0x0
                0x0000000000000018                _ztest_expected_result_entry_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_expected_result_entry.static.*)))
                0x0000000000000018                _ztest_expected_result_entry_list_end = .
                0x0000000000000018                _ztest_suite_node_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_suite_node.static.*)))
                0x0000000000000018                _ztest_suite_node_list_end = .
                0x0000000000000018                _ztest_unit_test_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_unit_test.static.*)))
                0x0000000000000018                _ztest_unit_test_list_end = .
                0x0000000000000018                _ztest_test_rule_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_test_rule.static.*)))
                0x0000000000000018                _ztest_test_rule_list_end = .

init_array      0x0000000000000018        0x8
                0x0000000000000018                __zephyr_init_array_start = .
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(SORT_BY_ALIGNMENT(.init_array) SORT_BY_ALIGNMENT(.ctors))
                0x0000000000000018                __zephyr_init_array_end = .
                0x0000000000000018                __CTOR_LIST__ = .
                0x0000000000000018        0x4 LONG 0x0
                0x000000000000001c        0x4 LONG 0x0
                0x0000000000000020                __CTOR_END__ = .
                0x0000000000000020                __init_array_start = .
                0x0000000000000020                __init_array_end = .

bt_l2cap_fixed_chan_area
                0x0000000000000020        0x0
                0x0000000000000020                _bt_l2cap_fixed_chan_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_l2cap_fixed_chan.static.*)))
                0x0000000000000020                _bt_l2cap_fixed_chan_list_end = .

bt_gatt_service_static_area
                0x0000000000000020        0x0
                0x0000000000000020                _bt_gatt_service_static_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_gatt_service_static.static.*)))
                0x0000000000000020                _bt_gatt_service_static_list_end = .

log_strings_area
                0x0000000000000020        0x0
                0x0000000000000020                _log_strings_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_strings.static.*)))
                0x0000000000000020                _log_strings_list_end = .

log_stmesp_ptr_area
                0x0000000000000020        0x0
                0x0000000000000020                _log_stmesp_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_stmesp_ptr.static.*)))
                0x0000000000000020                _log_stmesp_ptr_list_end = .

log_stmesp_str_area
                0x0000000000000020        0x0
                0x0000000000000020                _log_stmesp_str_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_stmesp_str.static.*)))
                0x0000000000000020                _log_stmesp_str_list_end = .

log_const_area  0x0000000000000020        0x0
                0x0000000000000020                _log_const_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_const.static.*)))
                0x0000000000000020                _log_const_list_end = .

log_backend_area
                0x0000000000000020        0x0
                0x0000000000000020                _log_backend_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_backend.static.*)))
                0x0000000000000020                _log_backend_list_end = .

log_link_area   0x0000000000000020        0x0
                0x0000000000000020                _log_link_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_link.static.*)))
                0x0000000000000020                _log_link_list_end = .

tracing_backend_area
                0x0000000000000020        0x0
                0x0000000000000020                _tracing_backend_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._tracing_backend.static.*)))
                0x0000000000000020                _tracing_backend_list_end = .

zephyr_dbg_info
 *(SORT_BY_ALIGNMENT(.dbg_thread_info))

intc_table_area
                0x0000000000000020        0x0
                0x0000000000000020                _intc_table_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._intc_table.static.*)))
                0x0000000000000020                _intc_table_list_end = .

symbol_to_keep  0x0000000000000020        0x0
                0x0000000000000020                __symbol_to_keep_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.symbol_to_keep*)))
                0x0000000000000020                __symbol_to_keep_end = .

shell_area      0x0000000000000020        0x0
                0x0000000000000020                _shell_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell.static.*)))
                0x0000000000000020                _shell_list_end = .

shell_root_cmds_area
                0x0000000000000020        0x0
                0x0000000000000020                _shell_root_cmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_root_cmds.static.*)))
                0x0000000000000020                _shell_root_cmds_list_end = .

shell_subcmds_area
                0x0000000000000020        0x0
                0x0000000000000020                _shell_subcmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_subcmds.static.*)))
                0x0000000000000020                _shell_subcmds_list_end = .

shell_dynamic_subcmds_area
                0x0000000000000020        0x0
                0x0000000000000020                _shell_dynamic_subcmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_dynamic_subcmds.static.*)))
                0x0000000000000020                _shell_dynamic_subcmds_list_end = .

cfb_font_area   0x0000000000000020        0x0
                0x0000000000000020                _cfb_font_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._cfb_font.static.*)))
                0x0000000000000020                _cfb_font_list_end = .

rodata

datas

device_states   0x0000000000000020        0x0
                0x0000000000000020                . = ALIGN (0x4)
                0x0000000000000020                __device_states_start = .
 *(SORT_BY_ALIGNMENT(.z_devstate))
 *(SORT_BY_ALIGNMENT(.z_devstate.*))
                0x0000000000000020                __device_states_end = .
                0x0000000000000020                . = ALIGN (0x4)

log_mpsc_pbuf_area
                0x0000000000000020        0x0
                0x0000000000000020                _log_mpsc_pbuf_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_mpsc_pbuf.static.*)))
                0x0000000000000020                _log_mpsc_pbuf_list_end = .

log_msg_ptr_area
                0x0000000000000020        0x0
                0x0000000000000020                _log_msg_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_msg_ptr.static.*)))
                0x0000000000000020                _log_msg_ptr_list_end = .

log_dynamic_area
                0x0000000000000020        0x0
                0x0000000000000020                _log_dynamic_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_dynamic.static.*)))
                0x0000000000000020                _log_dynamic_list_end = .

k_timer_area    0x0000000000000020        0x0
                0x0000000000000020                _k_timer_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_timer.static.*)))
                0x0000000000000020                _k_timer_list_end = .

k_mem_slab_area
                0x0000000000000020        0x0
                0x0000000000000020                _k_mem_slab_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mem_slab.static.*)))
                0x0000000000000020                _k_mem_slab_list_end = .

k_heap_area     0x0000000000000020        0x0
                0x0000000000000020                _k_heap_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_heap.static.*)))
                0x0000000000000020                _k_heap_list_end = .

k_mutex_area    0x0000000000000020        0x0
                0x0000000000000020                _k_mutex_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mutex.static.*)))
                0x0000000000000020                _k_mutex_list_end = .

k_stack_area    0x0000000000000020        0x0
                0x0000000000000020                _k_stack_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_stack.static.*)))
                0x0000000000000020                _k_stack_list_end = .

k_msgq_area     0x0000000000000020        0x0
                0x0000000000000020                _k_msgq_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_msgq.static.*)))
                0x0000000000000020                _k_msgq_list_end = .

k_mbox_area     0x0000000000000020        0x0
                0x0000000000000020                _k_mbox_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mbox.static.*)))
                0x0000000000000020                _k_mbox_list_end = .

k_pipe_area     0x0000000000000020        0x0
                0x0000000000000020                _k_pipe_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_pipe.static.*)))
                0x0000000000000020                _k_pipe_list_end = .

k_sem_area      0x0000000000000020        0x0
                0x0000000000000020                _k_sem_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_sem.static.*)))
                0x0000000000000020                _k_sem_list_end = .

k_event_area    0x0000000000000020        0x0
                0x0000000000000020                _k_event_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_event.static.*)))
                0x0000000000000020                _k_event_list_end = .

k_queue_area    0x0000000000000020        0x0
                0x0000000000000020                _k_queue_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_queue.static.*)))
                0x0000000000000020                _k_queue_list_end = .

k_fifo_area     0x0000000000000020        0x0
                0x0000000000000020                _k_fifo_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_fifo.static.*)))
                0x0000000000000020                _k_fifo_list_end = .

k_lifo_area     0x0000000000000020        0x0
                0x0000000000000020                _k_lifo_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_lifo.static.*)))
                0x0000000000000020                _k_lifo_list_end = .

k_condvar_area  0x0000000000000020        0x0
                0x0000000000000020                _k_condvar_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_condvar.static.*)))
                0x0000000000000020                _k_condvar_list_end = .

sys_mem_blocks_ptr_area
                0x0000000000000020        0x0
                0x0000000000000020                _sys_mem_blocks_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._sys_mem_blocks_ptr.static.*)))
                0x0000000000000020                _sys_mem_blocks_ptr_list_end = .

net_buf_pool_area
                0x0000000000000020        0x0
                0x0000000000000020                _net_buf_pool_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._net_buf_pool.static.*)))
                0x0000000000000020                _net_buf_pool_list_end = .

native_pre_tasks
                0x0000000000000020        0x4
                0x0000000000000020                __native_tasks_start = .
                0x0000000000000020                __native_PRE_BOOT_1_tasks_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_PRE_BOOT_1[0-9]_task)))
 .native_PRE_BOOT_10_task
                0x0000000000000020        0x4 zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_PRE_BOOT_1[1-9][0-9]_task)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_PRE_BOOT_1[1-9][0-9][0-9]_task)))
                0x0000000000000024                __native_PRE_BOOT_2_tasks_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_PRE_BOOT_2[0-9]_task)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_PRE_BOOT_2[1-9][0-9]_task)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_PRE_BOOT_2[1-9][0-9][0-9]_task)))
                0x0000000000000024                __native_PRE_BOOT_3_tasks_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_PRE_BOOT_3[0-9]_task)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_PRE_BOOT_3[1-9][0-9]_task)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_PRE_BOOT_3[1-9][0-9][0-9]_task)))
                0x0000000000000024                __native_FIRST_SLEEP_tasks_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_FIRST_SLEEP[0-9]_task)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_FIRST_SLEEP[1-9][0-9]_task)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_FIRST_SLEEP[1-9][0-9][0-9]_task)))
                0x0000000000000024                __native_ON_EXIT_tasks_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_ON_EXIT[0-9]_task)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_ON_EXIT[1-9][0-9]_task)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.native_ON_EXIT[1-9][0-9][0-9]_task)))
                0x0000000000000024                __native_tasks_end = .
                0x0000000000000024                __data_region_end = .

noinit

.data1
 *(SORT_BY_ALIGNMENT(.data1))

.bss
 *(SORT_BY_ALIGNMENT(.bss))

.bss.te_state   0x0000000000000000        0x4
 .bss.te_state  0x0000000000000000        0x4 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)

.bss.nce_st     0x0000000000000000        0x4
 .bss.nce_st    0x0000000000000000        0x4 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)

.bss.may_swap.0
                0x0000000000000000        0x4
 .bss.may_swap.0
                0x0000000000000000        0x4 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)

.bss.irq_vector_table
                0x0000000000000000      0x200
 .bss.irq_vector_table
                0x0000000000000000      0x200 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)

.bss.n_pend     0x0000000000000000        0x4
 .bss.n_pend    0x0000000000000000        0x4 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)

.bss.stdout_buff
                0x0000000000000000      0x100
 .bss.stdout_buff
                0x0000000000000000      0x100 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)

.bss.last_tick_time
                0x0000000000000000        0x8
 .bss.last_tick_time
                0x0000000000000000        0x8 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)

.bss.tick_period
                0x0000000000000000        0x8
 .bss.tick_period
                0x0000000000000000        0x8 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)

.bss.z_sys_post_kernel
                0x0000000000000000        0x1
 .bss.z_sys_post_kernel
                0x0000000000000000        0x1 zephyr/kernel/libkernel.a(init.c.obj)
                0x0000000000000000                z_sys_post_kernel

.noinit."WEST_TOPDIR/zephyr/kernel/init.c".2
                0x0000000000000000      0x800
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".2
                0x0000000000000000      0x800 zephyr/kernel/libkernel.a(init.c.obj)
                0x0000000000000000                z_interrupt_stacks

.noinit."WEST_TOPDIR/zephyr/kernel/init.c".1
                0x0000000000000000      0x100
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".1
                0x0000000000000000      0x100 zephyr/kernel/libkernel.a(init.c.obj)

.bss.z_idle_threads
                0x0000000000000000       0x4c
 .bss.z_idle_threads
                0x0000000000000000       0x4c zephyr/kernel/libkernel.a(init.c.obj)
                0x0000000000000000                z_idle_threads

.bss.z_main_thread
                0x0000000000000000       0x4c
 .bss.z_main_thread
                0x0000000000000000       0x4c zephyr/kernel/libkernel.a(init.c.obj)
                0x0000000000000000                z_main_thread

.noinit."WEST_TOPDIR/zephyr/kernel/init.c".0
                0x0000000000000000      0x400
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".0
                0x0000000000000000      0x400 zephyr/kernel/libkernel.a(init.c.obj)
                0x0000000000000000                z_main_stack

.bss._kernel    0x0000000000000000       0x20
 .bss._kernel   0x0000000000000000       0x20 zephyr/kernel/libkernel.a(init.c.obj)
                0x0000000000000000                _kernel

.bss._thread_dummy
                0x0000000000000000       0x4c
 .bss._thread_dummy
                0x0000000000000000       0x4c zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                _thread_dummy

.bss._sched_spinlock
                0x0000000000000000        0x0
 .bss._sched_spinlock
                0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000000000000                _sched_spinlock

.bss.slice_expired
                0x0000000000000000        0x1
 .bss.slice_expired
                0x0000000000000000        0x1 zephyr/kernel/libkernel.a(timeslicing.c.obj)

.bss.slice_timeouts
                0x0000000000000000       0x14
 .bss.slice_timeouts
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(timeslicing.c.obj)

.bss.slice_max_prio
                0x0000000000000000        0x4
 .bss.slice_max_prio
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeslicing.c.obj)

.bss.announce_remaining
                0x0000000000000000        0x4
 .bss.announce_remaining
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)

.bss.curr_tick  0x0000000000000000        0x8
 .bss.curr_tick
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)

.stab
 *(SORT_BY_ALIGNMENT(.stab))

.stabstr
 *(SORT_BY_ALIGNMENT(.stabstr))

.stab.excl
 *(SORT_BY_ALIGNMENT(.stab.excl))

.stab.exclstr
 *(SORT_BY_ALIGNMENT(.stab.exclstr))

.stab.index
 *(SORT_BY_ALIGNMENT(.stab.index))

.stab.indexstr
 *(SORT_BY_ALIGNMENT(.stab.indexstr))

.comment        0x0000000000000000      0x554
 *(SORT_BY_ALIGNMENT(.comment))
 .comment       0x0000000000000000       0x2c zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
 .comment       0x000000000000002c       0x2c app/libapp.a(main.c.obj)
 .comment       0x0000000000000058       0x2c zephyr/libzephyr.a(printk.c.obj)
 .comment       0x0000000000000084       0x2c zephyr/libzephyr.a(thread_entry.c.obj)
 .comment       0x00000000000000b0       0x2c zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .comment       0x00000000000000dc       0x2c zephyr/libzephyr.a(assert.c.obj)
 .comment       0x0000000000000108       0x2c zephyr/libzephyr.a(configs.c.obj)
 .comment       0x0000000000000134       0x2c zephyr/libzephyr.a(tracing_none.c.obj)
 .comment       0x0000000000000160       0x2c zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .comment       0x000000000000018c       0x2c zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
 .comment       0x00000000000001b8       0x2c zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .comment       0x00000000000001e4       0x2c zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
 .comment       0x0000000000000210       0x2c zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .comment       0x000000000000023c       0x2c zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .comment       0x0000000000000268       0x2c zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .comment       0x0000000000000294       0x2c zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
 .comment       0x00000000000002c0       0x2c zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
 .comment       0x00000000000002ec       0x2c zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .comment       0x0000000000000318       0x2c zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
 .comment       0x0000000000000344       0x2c zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .comment       0x0000000000000370       0x2c zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .comment       0x000000000000039c       0x2c zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .comment       0x00000000000003c8       0x2c zephyr/kernel/libkernel.a(fatal.c.obj)
 .comment       0x00000000000003f4       0x2c zephyr/kernel/libkernel.a(init.c.obj)
 .comment       0x0000000000000420       0x2c zephyr/kernel/libkernel.a(idle.c.obj)
 .comment       0x000000000000044c       0x2c zephyr/kernel/libkernel.a(thread.c.obj)
 .comment       0x0000000000000478       0x2c zephyr/kernel/libkernel.a(sched.c.obj)
 .comment       0x00000000000004a4       0x2c zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .comment       0x00000000000004d0       0x2c zephyr/kernel/libkernel.a(timeout.c.obj)
 .comment       0x00000000000004fc       0x2c zephyr/kernel/libkernel.a(banner.c.obj)
 .comment       0x0000000000000528       0x2c zephyr/kernel/libkernel.a(device.c.obj)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
 .note.GNU-stack
                0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .note.GNU-stack
                0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)

.gnu.build.attributes
 *(SORT_BY_ALIGNMENT(.gnu.build.attributes))

.debug
 *(SORT_BY_ALIGNMENT(.debug))

.line
 *(SORT_BY_ALIGNMENT(.line))

.debug_srcinfo
 *(SORT_BY_ALIGNMENT(.debug_srcinfo))

.debug_sfnames
 *(SORT_BY_ALIGNMENT(.debug_sfnames))

.debug_aranges  0x0000000000000000      0x8d0
 *(SORT_BY_ALIGNMENT(.debug_aranges))
 .debug_aranges
                0x0000000000000000       0x20 zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
 .debug_aranges
                0x0000000000000020       0x20 app/libapp.a(main.c.obj)
 .debug_aranges
                0x0000000000000040       0x68 zephyr/libzephyr.a(printk.c.obj)
 .debug_aranges
                0x00000000000000a8       0x20 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_aranges
                0x00000000000000c8       0x38 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_aranges
                0x0000000000000100       0x28 zephyr/libzephyr.a(assert.c.obj)
 .debug_aranges
                0x0000000000000128       0x20 zephyr/libzephyr.a(configs.c.obj)
 .debug_aranges
                0x0000000000000148       0x20 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_aranges
                0x0000000000000168       0x28 zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .debug_aranges
                0x0000000000000190       0x20 zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
 .debug_aranges
                0x00000000000001b0       0x30 zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .debug_aranges
                0x00000000000001e0       0x28 zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
 .debug_aranges
                0x0000000000000208       0x38 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .debug_aranges
                0x0000000000000240       0x58 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .debug_aranges
                0x0000000000000298       0x50 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .debug_aranges
                0x00000000000002e8       0x20 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
 .debug_aranges
                0x0000000000000308       0x40 zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
 .debug_aranges
                0x0000000000000348       0x80 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .debug_aranges
                0x00000000000003c8       0x20 zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
 .debug_aranges
                0x00000000000003e8       0x60 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .debug_aranges
                0x0000000000000448       0x30 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .debug_aranges
                0x0000000000000478       0x58 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .debug_aranges
                0x00000000000004d0       0x38 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_aranges
                0x0000000000000508       0x68 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_aranges
                0x0000000000000570       0x28 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_aranges
                0x0000000000000598       0x90 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_aranges
                0x0000000000000628      0x170 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_aranges
                0x0000000000000798       0x40 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_aranges
                0x00000000000007d8       0x98 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_aranges
                0x0000000000000870       0x20 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_aranges
                0x0000000000000890       0x40 zephyr/kernel/libkernel.a(device.c.obj)

.debug_pubnames
 *(SORT_BY_ALIGNMENT(.debug_pubnames))

.debug_info     0x0000000000000000    0x11505
 *(SORT_BY_ALIGNMENT(.debug_info))
 .debug_info    0x0000000000000000       0xe3 zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
 .debug_info    0x00000000000000e3       0xfd app/libapp.a(main.c.obj)
 .debug_info    0x00000000000001e0      0x6a5 zephyr/libzephyr.a(printk.c.obj)
 .debug_info    0x0000000000000885      0x5b6 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_info    0x0000000000000e3b      0xf9c zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_info    0x0000000000001dd7      0x1e8 zephyr/libzephyr.a(assert.c.obj)
 .debug_info    0x0000000000001fbf       0x3f zephyr/libzephyr.a(configs.c.obj)
 .debug_info    0x0000000000001ffe       0xc0 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_info    0x00000000000020be      0x11e zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .debug_info    0x00000000000021dc       0xda zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
 .debug_info    0x00000000000022b6      0x16a zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .debug_info    0x0000000000002420      0x6f3 zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
 .debug_info    0x0000000000002b13      0x9bb zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .debug_info    0x00000000000034ce      0x2da zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .debug_info    0x00000000000037a8      0x348 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .debug_info    0x0000000000003af0       0xf0 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
 .debug_info    0x0000000000003be0      0x164 zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
 .debug_info    0x0000000000003d44      0xcb2 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .debug_info    0x00000000000049f6       0xcc zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
 .debug_info    0x0000000000004ac2      0x388 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .debug_info    0x0000000000004e4a      0x41e zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .debug_info    0x0000000000005268      0x5f9 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .debug_info    0x0000000000005861      0x8a7 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_info    0x0000000000006108     0x15ab zephyr/kernel/libkernel.a(init.c.obj)
 .debug_info    0x00000000000076b3      0x24f zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_info    0x0000000000007902     0x138c zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_info    0x0000000000008c8e     0x628c zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_info    0x000000000000ef1a      0xcb1 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_info    0x000000000000fbcb     0x14e2 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_info    0x00000000000110ad       0xc2 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_info    0x000000000001116f      0x396 zephyr/kernel/libkernel.a(device.c.obj)

.debug_abbrev   0x0000000000000000     0x4572
 *(SORT_BY_ALIGNMENT(.debug_abbrev))
 .debug_abbrev  0x0000000000000000       0x62 zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
 .debug_abbrev  0x0000000000000062       0xd3 app/libapp.a(main.c.obj)
 .debug_abbrev  0x0000000000000135      0x327 zephyr/libzephyr.a(printk.c.obj)
 .debug_abbrev  0x000000000000045c      0x248 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_abbrev  0x00000000000006a4      0x41e zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_abbrev  0x0000000000000ac2      0x13d zephyr/libzephyr.a(assert.c.obj)
 .debug_abbrev  0x0000000000000bff       0x39 zephyr/libzephyr.a(configs.c.obj)
 .debug_abbrev  0x0000000000000c38       0x5e zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_abbrev  0x0000000000000c96       0xcf zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .debug_abbrev  0x0000000000000d65       0x94 zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
 .debug_abbrev  0x0000000000000df9       0xdc zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .debug_abbrev  0x0000000000000ed5      0x24b zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
 .debug_abbrev  0x0000000000001120      0x327 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .debug_abbrev  0x0000000000001447      0x134 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .debug_abbrev  0x000000000000157b      0x155 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .debug_abbrev  0x00000000000016d0       0xb6 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
 .debug_abbrev  0x0000000000001786       0xc6 zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
 .debug_abbrev  0x000000000000184c      0x3e6 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .debug_abbrev  0x0000000000001c32       0x96 zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
 .debug_abbrev  0x0000000000001cc8      0x16d zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .debug_abbrev  0x0000000000001e35      0x24b zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .debug_abbrev  0x0000000000002080      0x2d3 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .debug_abbrev  0x0000000000002353      0x356 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_abbrev  0x00000000000026a9      0x6a3 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_abbrev  0x0000000000002d4c      0x17c zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_abbrev  0x0000000000002ec8      0x531 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_abbrev  0x00000000000033f9      0x670 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_abbrev  0x0000000000003a69      0x3d6 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_abbrev  0x0000000000003e3f      0x4de zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_abbrev  0x000000000000431d       0x80 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_abbrev  0x000000000000439d      0x1d5 zephyr/kernel/libkernel.a(device.c.obj)

.debug_line     0x0000000000000000     0xa8f8
 *(SORT_BY_ALIGNMENT(.debug_line))
 .debug_line    0x0000000000000000      0x140 zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
 .debug_line    0x0000000000000140       0xde app/libapp.a(main.c.obj)
 .debug_line    0x000000000000021e      0x455 zephyr/libzephyr.a(printk.c.obj)
 .debug_line    0x0000000000000673      0x396 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_line    0x0000000000000a09      0xc4d zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_line    0x0000000000001656      0x21d zephyr/libzephyr.a(assert.c.obj)
 .debug_line    0x0000000000001873      0x17b zephyr/libzephyr.a(configs.c.obj)
 .debug_line    0x00000000000019ee       0x81 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_line    0x0000000000001a6f      0x165 zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .debug_line    0x0000000000001bd4       0xe5 zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
 .debug_line    0x0000000000001cb9      0x103 zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .debug_line    0x0000000000001dbc      0x3cc zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
 .debug_line    0x0000000000002188      0x538 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .debug_line    0x00000000000026c0      0x1d8 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .debug_line    0x0000000000002898      0x3ad zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .debug_line    0x0000000000002c45       0xc2 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
 .debug_line    0x0000000000002d07      0x13e zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
 .debug_line    0x0000000000002e45      0x766 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .debug_line    0x00000000000035ab      0x100 zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
 .debug_line    0x00000000000036ab      0x278 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .debug_line    0x0000000000003923      0x29d zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .debug_line    0x0000000000003bc0      0x52b zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .debug_line    0x00000000000040eb      0x529 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_line    0x0000000000004614      0xa46 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_line    0x000000000000505a      0x264 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_line    0x00000000000052be      0xa99 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_line    0x0000000000005d57     0x33b0 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_line    0x0000000000009107      0x632 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_line    0x0000000000009739      0xde1 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_line    0x000000000000a51a       0xd4 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_line    0x000000000000a5ee      0x30a zephyr/kernel/libkernel.a(device.c.obj)

.debug_frame    0x0000000000000000     0x1ab0
 *(SORT_BY_ALIGNMENT(.debug_frame))
 .debug_frame   0x0000000000000000       0x24 zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
 .debug_frame   0x0000000000000024       0x40 app/libapp.a(main.c.obj)
 .debug_frame   0x0000000000000064      0x138 zephyr/libzephyr.a(printk.c.obj)
 .debug_frame   0x000000000000019c       0x2c zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_frame   0x00000000000001c8       0xc4 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_frame   0x000000000000028c       0x54 zephyr/libzephyr.a(assert.c.obj)
 .debug_frame   0x00000000000002e0       0x24 zephyr/libzephyr.a(configs.c.obj)
 .debug_frame   0x0000000000000304       0x64 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_frame   0x0000000000000368       0x58 zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .debug_frame   0x00000000000003c0       0x2c zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
 .debug_frame   0x00000000000003ec       0x44 zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .debug_frame   0x0000000000000430       0x54 zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
 .debug_frame   0x0000000000000484       0xa8 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .debug_frame   0x000000000000052c      0x114 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .debug_frame   0x0000000000000640      0x100 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .debug_frame   0x0000000000000740       0x3c zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
 .debug_frame   0x000000000000077c       0xa4 zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
 .debug_frame   0x0000000000000820      0x17c zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .debug_frame   0x000000000000099c       0x34 zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
 .debug_frame   0x00000000000009d0       0xdc zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .debug_frame   0x0000000000000aac       0x74 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .debug_frame   0x0000000000000b20      0x100 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .debug_frame   0x0000000000000c20       0x88 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_frame   0x0000000000000ca8      0x184 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_frame   0x0000000000000e2c       0x3c zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_frame   0x0000000000000e68      0x1b8 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_frame   0x0000000000001020      0x6a8 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_frame   0x00000000000016c8       0xd0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_frame   0x0000000000001798      0x234 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_frame   0x00000000000019cc       0x34 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_frame   0x0000000000001a00       0xb0 zephyr/kernel/libkernel.a(device.c.obj)

.debug_str      0x0000000000000000     0xaec9
 *(SORT_BY_ALIGNMENT(.debug_str))
 .debug_str     0x0000000000000000      0x3ad zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
 .debug_str     0x00000000000003ad      0x2a1 app/libapp.a(main.c.obj)
 .debug_str     0x000000000000064e      0x5b9 zephyr/libzephyr.a(printk.c.obj)
 .debug_str     0x0000000000000c07      0x570 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_str     0x0000000000001177      0x72b zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_str     0x00000000000018a2      0x3a2 zephyr/libzephyr.a(assert.c.obj)
 .debug_str     0x0000000000001c44      0x228 zephyr/libzephyr.a(configs.c.obj)
 .debug_str     0x0000000000001e6c      0x307 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_str     0x0000000000002173      0x306 zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .debug_str     0x0000000000002479      0x2ca zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
 .debug_str     0x0000000000002743      0x302 zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .debug_str     0x0000000000002a45      0x60e zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
 .debug_str     0x0000000000003053      0x729 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .debug_str     0x000000000000377c      0x389 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .debug_str     0x0000000000003b05      0x5a9 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .debug_str     0x00000000000040ae      0x2e9 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
 .debug_str     0x0000000000004397      0x359 zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
 .debug_str     0x00000000000046f0      0xa6e zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .debug_str     0x000000000000515e      0x2dc zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
 .debug_str     0x000000000000543a      0x42b zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .debug_str     0x0000000000005865      0x5a7 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .debug_str     0x0000000000005e0c      0x562 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .debug_str     0x000000000000636e      0x6dc zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_str     0x0000000000006a4a      0xcac zephyr/kernel/libkernel.a(init.c.obj)
 .debug_str     0x00000000000076f6      0x3a0 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_str     0x0000000000007a96      0xa69 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_str     0x00000000000084ff     0x11c5 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_str     0x00000000000096c4      0x948 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_str     0x000000000000a00c      0x84a zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_str     0x000000000000a856      0x2a2 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_str     0x000000000000aaf8      0x3d1 zephyr/kernel/libkernel.a(device.c.obj)

.debug_loc      0x0000000000000000     0x711b
 *(SORT_BY_ALIGNMENT(.debug_loc))
 .debug_loc     0x0000000000000000       0x1a app/libapp.a(main.c.obj)
 .debug_loc     0x000000000000001a      0x2d8 zephyr/libzephyr.a(printk.c.obj)
 .debug_loc     0x00000000000002f2       0x15 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_loc     0x0000000000000307     0x144e zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_loc     0x0000000000001755       0x50 zephyr/libzephyr.a(assert.c.obj)
 .debug_loc     0x00000000000017a5       0x16 zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .debug_loc     0x00000000000017bb       0x6b zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
 .debug_loc     0x0000000000001826      0x25d zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .debug_loc     0x0000000000001a83       0x5e zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .debug_loc     0x0000000000001ae1       0x2c zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .debug_loc     0x0000000000001b0d       0x15 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
 .debug_loc     0x0000000000001b22      0x1f8 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .debug_loc     0x0000000000001d1a       0x6c zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .debug_loc     0x0000000000001d86       0x5e zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .debug_loc     0x0000000000001de4       0xaf zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .debug_loc     0x0000000000001e93       0xb7 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_loc     0x0000000000001f4a      0x532 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_loc     0x000000000000247c       0x42 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_loc     0x00000000000024be      0x859 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_loc     0x0000000000002d17     0x3660 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_loc     0x0000000000006377      0x256 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_loc     0x00000000000065cd      0xb0f zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_loc     0x00000000000070dc       0x3f zephyr/kernel/libkernel.a(device.c.obj)

.debug_macinfo
 *(SORT_BY_ALIGNMENT(.debug_macinfo))

.debug_weaknames
 *(SORT_BY_ALIGNMENT(.debug_weaknames))

.debug_funcnames
 *(SORT_BY_ALIGNMENT(.debug_funcnames))

.debug_typenames
 *(SORT_BY_ALIGNMENT(.debug_typenames))

.debug_varnames
 *(SORT_BY_ALIGNMENT(.debug_varnames))

.debug_pubtypes
 *(SORT_BY_ALIGNMENT(.debug_pubtypes))

.debug_ranges   0x0000000000000000     0x1bc0
 *(SORT_BY_ALIGNMENT(.debug_ranges))
 .debug_ranges  0x0000000000000000       0x10 zephyr/CMakeFiles/offsets.dir/./arch/posix/core/offsets/offsets.c.obj
 .debug_ranges  0x0000000000000010       0x30 app/libapp.a(main.c.obj)
 .debug_ranges  0x0000000000000040       0x98 zephyr/libzephyr.a(printk.c.obj)
 .debug_ranges  0x00000000000000d8       0x10 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_ranges  0x00000000000000e8      0x180 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_ranges  0x0000000000000268       0x18 zephyr/libzephyr.a(assert.c.obj)
 .debug_ranges  0x0000000000000280       0x10 zephyr/libzephyr.a(configs.c.obj)
 .debug_ranges  0x0000000000000290       0x10 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_ranges  0x00000000000002a0       0x18 zephyr/arch/arch/posix/core/libarch__posix__core.a(cpuhalt.c.obj)
 .debug_ranges  0x00000000000002b8       0x10 zephyr/arch/arch/posix/core/libarch__posix__core.a(fatal.c.obj)
 .debug_ranges  0x00000000000002c8       0x20 zephyr/arch/arch/posix/core/libarch__posix__core.a(irq.c.obj)
 .debug_ranges  0x00000000000002e8       0x38 zephyr/arch/arch/posix/core/libarch__posix__core.a(swap.c.obj)
 .debug_ranges  0x0000000000000320       0x28 zephyr/arch/arch/posix/core/libarch__posix__core.a(thread.c.obj)
 .debug_ranges  0x0000000000000348       0x48 zephyr/arch/arch/posix/core/libarch__posix__core.a(posix_core_nsi.c.obj)
 .debug_ranges  0x0000000000000390       0x40 zephyr/soc/soc/native/libsoc__native__inf_clock.a(soc.c.obj)
 .debug_ranges  0x00000000000003d0       0x10 zephyr/soc/soc/native/libsoc__native__inf_clock.a(native_tasks.c.obj)
 .debug_ranges  0x00000000000003e0       0x30 zephyr/boards/native/native_sim/libboards__native__native_sim.a(nsi_if.c.obj)
 .debug_ranges  0x0000000000000410       0x70 zephyr/boards/native/native_sim/libboards__native__native_sim.a(irq_handler.c.obj)
 .debug_ranges  0x0000000000000480       0x10 zephyr/boards/native/native_sim/libboards__native__native_sim.a(misc.c.obj)
 .debug_ranges  0x0000000000000490       0x50 zephyr/boards/native/native_sim/libboards__native__native_sim.a(posix_arch_if.c.obj)
 .debug_ranges  0x00000000000004e0       0x20 zephyr/drivers/console/libdrivers__console.a(posix_arch_console.c.obj)
 .debug_ranges  0x0000000000000500       0x48 zephyr/drivers/timer/libdrivers__timer.a(native_sim_timer.c.obj)
 .debug_ranges  0x0000000000000548       0x78 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_ranges  0x00000000000005c0      0x138 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_ranges  0x00000000000006f8       0x18 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_ranges  0x0000000000000710      0x1d0 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_ranges  0x00000000000008e0      0xf10 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_ranges  0x00000000000017f0       0xa0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_ranges  0x0000000000001890      0x298 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_ranges  0x0000000000001b28       0x10 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_ranges  0x0000000000001b38       0x88 zephyr/kernel/libkernel.a(device.c.obj)

.debug_addr
 *(SORT_BY_ALIGNMENT(.debug_addr))

.debug_line_str
 *(SORT_BY_ALIGNMENT(.debug_line_str))

.debug_loclists
 *(SORT_BY_ALIGNMENT(.debug_loclists))

.debug_macro
 *(SORT_BY_ALIGNMENT(.debug_macro))

.debug_names
 *(SORT_BY_ALIGNMENT(.debug_names))

.debug_rnglists
 *(SORT_BY_ALIGNMENT(.debug_rnglists))

.debug_str_offsets
 *(SORT_BY_ALIGNMENT(.debug_str_offsets))

.debug_sup
 *(SORT_BY_ALIGNMENT(.debug_sup))

.gnu.attributes
 *(SORT_BY_ALIGNMENT(.gnu.attributes))
OUTPUT(zephyr/zephyr.elf elf32-i386)
